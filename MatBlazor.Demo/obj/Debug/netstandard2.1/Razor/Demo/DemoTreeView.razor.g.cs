#pragma checksum "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0d5703e61f733c3846a854bab1bc37d5c9b8ab99"
// <auto-generated/>
#pragma warning disable 1591
namespace MatBlazor.Demo.Demo
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.BlazorFiddle;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Demo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.DemoContainer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Doc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Frames;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
using System.ComponentModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
    public partial class DemoTreeView : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenComponent<MatBlazor.Demo.Doc.DocMatTreeView>(0);
            __builder.CloseComponent();
            __builder.AddMarkupContent(1, "\n\n\n\n");
            __builder.AddMarkupContent(2, "<h5 class=\"mat-h5\">A tree view based on a Model</h5>\n\n");
            __builder.OpenComponent<MatBlazor.Demo.DemoContainer.DemoContainer>(3);
            __builder.AddAttribute(4, "Content", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.MatTreeView<TreeNodeModel>>(5);
                __builder2.AddAttribute(6, "RootNode", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<TreeNodeModel>(
#nullable restore
#line 12 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                MyRootNode

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(7, "GetChildNodesCallback", new MatBlazor.GetChildNodesDelegate<TreeNodeModel>(
#nullable restore
#line 13 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                              (n)=>n.Nodes

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(8, "NodeTemplate", (Microsoft.AspNetCore.Components.RenderFragment<TreeNodeModel>)((context) => (__builder3) => {
                    __builder3.AddContent(9, 
#nullable restore
#line 15 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                 context.Name

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.AddAttribute(10, "SourceContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.Demo.BlazorFiddle.BlazorFiddle>(11);
                __builder2.AddAttribute(12, "Template", "MatBlazor");
                __builder2.AddAttribute(13, "Code", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 70 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                                  @"
        <MatTreeView TNode=""TreeNodeModel""
                     RootNode=""@MyRootNode""
                     GetChildNodesCallback=""@((n)=>n.Nodes)"">
            <NodeTemplate>
                @context.Name
            </NodeTemplate>
        </MatTreeView>

        @code
        {
            class TreeNodeModel
            {
                public string Name { get; set; }
                public TreeNodeModel[] Nodes { get; set; } = new TreeNodeModel[0];
            }

            TreeNodeModel MyRootNode = new TreeNodeModel()
            {
                Name = ""Book"",
                Nodes = new TreeNodeModel[] {
                    new TreeNodeModel(){
                        Name = ""Chapter 1"",
                        Nodes = new TreeNodeModel[] {
                            new TreeNodeModel(){
                                Name = ""Heading"",
                            },
                            new TreeNodeModel(){
                                Name = ""Content"",
                            }
                        }
                    },
                    new TreeNodeModel(){
                        Name = ""Chapter 2"",
                        Nodes = new TreeNodeModel[] {
                            new TreeNodeModel(){
                                Name = ""Heading"",
                            },
                            new TreeNodeModel(){
                                Name = ""Content"",
                            }
                        }
                    },
                    new TreeNodeModel(){
                        Name = ""Chapter 3"",
                        Nodes = new TreeNodeModel[] {
                            new TreeNodeModel(){
                                Name = ""Heading"",
                            },
                            new TreeNodeModel(){
                                Name = ""Content"",
                            }
                        }
                    }
                }
            };
        }

    "

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(14, "\n\n");
            __builder.AddMarkupContent(15, "<h5 class=\"mat-h5\">Dynamically set tab index</h5>\n\n");
            __builder.OpenComponent<MatBlazor.Demo.DemoContainer.DemoContainer>(16);
            __builder.AddAttribute(17, "Content", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.MatTreeView<LoadOnDemandTreeNodeModel>>(18);
                __builder2.AddAttribute(19, "RootNode", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<LoadOnDemandTreeNodeModel>(
#nullable restore
#line 137 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                MyLoadOnDemandRootNode

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(20, "GetChildNodesCallback", new MatBlazor.GetChildNodesDelegate<LoadOnDemandTreeNodeModel>(
#nullable restore
#line 138 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                             GetChildNodes

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(21, "LoadChildNodesCallback", new MatBlazor.LoadChildNodesDelegate<LoadOnDemandTreeNodeModel>(
#nullable restore
#line 139 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                              LoadChildNodesAsync

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(22, "NodeTemplate", (Microsoft.AspNetCore.Components.RenderFragment<LoadOnDemandTreeNodeModel>)((context) => (__builder3) => {
                    __builder3.AddContent(23, 
#nullable restore
#line 141 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                 context.Name

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.AddAttribute(24, "SourceContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.Demo.BlazorFiddle.BlazorFiddle>(25);
                __builder2.AddAttribute(26, "Template", "MatBlazor");
                __builder2.AddAttribute(27, "Code", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 178 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                                  @"
        <MatTreeView TNode=""LoadOnDemandTreeNodeModel""
                     RootNode=""@MyLoadOnDemandRootNode""
                     GetChildNodesCallback=""@GetChildNodes""
                     LoadChildNodesCallback=""@LoadChildNodesAsync"">
            <NodeTemplate>
                @context.Name
            </NodeTemplate>
        </MatTreeView>

        @code
        {
            class LoadOnDemandTreeNodeModel
            {
                public string Name { get; set; }
                public LoadOnDemandTreeNodeModel[] Nodes { get; set; } = null;
            }

            LoadOnDemandTreeNodeModel MyLoadOnDemandRootNode = new LoadOnDemandTreeNodeModel() { Name = ""Root Item"" };

            private IEnumerable<LoadOnDemandTreeNodeModel> GetChildNodes(LoadOnDemandTreeNodeModel parentNode)
            {
                if (parentNode.Nodes == null)
                    return null; // LoadChildNodesAsync will be called to load the child nodes
                else
                    return parentNode.Nodes;
            }

            private async Task<IEnumerable<LoadOnDemandTreeNodeModel>> LoadChildNodesAsync(LoadOnDemandTreeNodeModel parentNode)
            {
                if (parentNode.Nodes == null)
                {
                    Random rnd = new Random();
                    await Task.Delay(rnd.Next(250, 4000));
                    parentNode.Nodes = new LoadOnDemandTreeNodeModel[rnd.Next(0, 5)];
                    for (int i = 0; i < parentNode.Nodes.Length; i++)
                        parentNode.Nodes[i] = new LoadOnDemandTreeNodeModel() { Name = $""Child {i}"" };
                }
                return parentNode.Nodes;
            }
        }
    "

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(28, "\n\n");
            __builder.AddMarkupContent(29, "<h5 class=\"mat-h5\">Data Binding</h5>\n\n");
            __builder.OpenComponent<MatBlazor.Demo.DemoContainer.DemoContainer>(30);
            __builder.AddAttribute(31, "Content", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.MatTreeView<TreeNodeModel>>(32);
                __builder2.AddAttribute(33, "RootNode", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<TreeNodeModel>(
#nullable restore
#line 228 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                MyRootNode

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(34, "GetChildNodesCallback", new MatBlazor.GetChildNodesDelegate<TreeNodeModel>(
#nullable restore
#line 229 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                              (n)=>n.Nodes

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(35, "SelectedNode", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<TreeNodeModel>(
#nullable restore
#line 230 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                          SelectedNode

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(36, "SelectedNodeChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<TreeNodeModel>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<TreeNodeModel>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => SelectedNode = __value, SelectedNode))));
                __builder2.AddAttribute(37, "NodeTemplate", (Microsoft.AspNetCore.Components.RenderFragment<TreeNodeModel>)((context) => (__builder3) => {
                    __builder3.AddContent(38, 
#nullable restore
#line 233 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                 context.Name

#line default
#line hidden
#nullable disable
                    );
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(39, "\n\n        ");
                __builder2.OpenElement(40, "p");
                __builder2.AddMarkupContent(41, "\n            Selected Node = ");
                __builder2.AddContent(42, 
#nullable restore
#line 238 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                             SelectedNode?.Name

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(43, "\n\n        ");
                __builder2.OpenElement(44, "button");
                __builder2.AddAttribute(45, "class", "btn btn-secondary");
                __builder2.AddAttribute(46, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 241 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                                     SelectChapter2

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddContent(47, "Select Chapter 2");
                __builder2.CloseElement();
            }
            ));
            __builder.AddAttribute(48, "SourceContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.Demo.BlazorFiddle.BlazorFiddle>(49);
                __builder2.AddAttribute(50, "Template", "MatBlazor");
                __builder2.AddAttribute(51, "Code", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 254 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
                                                  @"
        <MatTreeView TNode=""TreeNodeModel""
                     RootNode=""@MyRootNode""
                     GetChildNodesCallback=""@((n)=>n.Nodes)""
                     @bind-SelectedNode=""@SelectedNode""
                     @bind-SelectedNode:event=""SelectedNodeChanged"">
            <NodeTemplate>
                @context.Name
            </NodeTemplate>
        </MatTreeView>

        <p>
            Selected Node = @SelectedNode?.Name
        </p>

        <button class=""btn btn-secondary"" @onclick=""@SelectChapter2"">Select Chapter 2</button>

        @code{

            TreeNodeModel SelectedNode { get; set; }

            private void SelectChapter2()
            {
                this.SelectedNode = MyRootNode.Nodes[1];
            }
        }
    "

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
        }
        #pragma warning restore 1998
#nullable restore
#line 20 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
         
            class TreeNodeModel
            {
                public string Name { get; set; }
                public TreeNodeModel[] Nodes { get; set; } = new TreeNodeModel[0];
            }

            TreeNodeModel MyRootNode = new TreeNodeModel()
            {
                Name = "Book",
                Nodes = new TreeNodeModel[] {
                    new TreeNodeModel(){
                        Name = "Chapter 1",
                        Nodes = new TreeNodeModel[] {
                            new TreeNodeModel(){
                                Name = "Heading",
                            },
                            new TreeNodeModel(){
                                Name = "Content",
                            }
                        }
                    },
                    new TreeNodeModel(){
                        Name = "Chapter 2",
                        Nodes = new TreeNodeModel[] {
                            new TreeNodeModel(){
                                Name = "Heading",
                            },
                            new TreeNodeModel(){
                                Name = "Content",
                            }
                        }
                    },
                    new TreeNodeModel(){
                        Name = "Chapter 3",
                        Nodes = new TreeNodeModel[] {
                            new TreeNodeModel(){
                                Name = "Heading",
                            },
                            new TreeNodeModel(){
                                Name = "Content",
                            }
                        }
                    }
                }
            };
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 146 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
         
            class LoadOnDemandTreeNodeModel
            {
                public string Name { get; set; }
                public LoadOnDemandTreeNodeModel[] Nodes { get; set; } = null;
            }

            LoadOnDemandTreeNodeModel MyLoadOnDemandRootNode = new LoadOnDemandTreeNodeModel() { Name = "Root Item" };

            private IEnumerable<LoadOnDemandTreeNodeModel> GetChildNodes(LoadOnDemandTreeNodeModel parentNode)
            {
                if (parentNode.Nodes == null)
                    return null; // LoadChildNodesAsync will be called to load the child nodes
                else
                    return parentNode.Nodes;
            }

            private async Task<IEnumerable<LoadOnDemandTreeNodeModel>> LoadChildNodesAsync(LoadOnDemandTreeNodeModel parentNode)
            {
                if (parentNode.Nodes == null)
                {
                    Random rnd = new Random();
                    await Task.Delay(rnd.Next(250, 4000));
                    parentNode.Nodes = new LoadOnDemandTreeNodeModel[rnd.Next(0, 5)];
                    for (int i = 0; i < parentNode.Nodes.Length; i++)
                        parentNode.Nodes[i] = new LoadOnDemandTreeNodeModel() { Name = $"Child {i}" };
                }
                return parentNode.Nodes;
            }
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 243 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTreeView.razor"
              

            TreeNodeModel SelectedNode { get; set; }

            private void SelectChapter2()
            {
                this.SelectedNode = MyRootNode.Nodes[1];
            }
        

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
