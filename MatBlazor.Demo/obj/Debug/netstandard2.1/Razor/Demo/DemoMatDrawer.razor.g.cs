#pragma checksum "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoMatDrawer.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "720952efc67e83f0953d92b1166af149065eed58"
// <auto-generated/>
#pragma warning disable 1591
namespace MatBlazor.Demo.Demo
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.BlazorFiddle;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Demo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.DemoContainer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Doc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Frames;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Pages;

#line default
#line hidden
#nullable disable
    public partial class DemoMatDrawer : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenComponent<MatBlazor.Demo.Doc.DocMatDrawer>(0);
            __builder.CloseComponent();
            __builder.AddMarkupContent(1, "\n");
            __builder.OpenComponent<MatBlazor.Demo.Doc.DocMatDrawerContainer>(2);
            __builder.AddAttribute(3, "Secondary", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 2 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoMatDrawer.razor"
                                  true

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(4, "\n");
            __builder.OpenComponent<MatBlazor.Demo.Doc.DocMatDrawerContent>(5);
            __builder.AddAttribute(6, "Secondary", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 3 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoMatDrawer.razor"
                                true

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(7, "\n\n");
            __builder.AddMarkupContent(8, "<h5 class=\"mat-h5\">Opened</h5>\n");
            __builder.OpenComponent<MatBlazor.Demo.DemoContainer.DemoContainer>(9);
            __builder.AddAttribute(10, "SourcePath", ".\\..\\..\\MatBlazor.Demo\\Frames\\MatDrawerPageFrame.razor");
            __builder.AddAttribute(11, "Content", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddMarkupContent(12, "<iframe src=\"MatDrawerFrame\" style=\"width: 100%; height: 50%;\"></iframe>");
            }
            ));
            __builder.AddAttribute(13, "SourceContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.Demo.BlazorFiddle.BlazorFiddle>(14);
                __builder2.AddAttribute(15, "Template", "MatBlazor");
                __builder2.AddAttribute(16, "Code", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 11 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoMatDrawer.razor"
                                                  @"@page ""/MatDrawerFrame""

<MatDrawerContainer Style=""width: 100vw; height: 100vh;"">
    <MatDrawer @bind-Opened=""@Opened"">
        Drawer Content
    </MatDrawer>
    <MatDrawerContent>
        <div>
            <MatButton OnClick=""@((e) => ButtonClicked())"">
                @if (Opened)
                {
                    <span>Hide Menu</span>
                }
                else
                {
                    <span>Open Menu</span>
                }
            </MatButton>
        </div>
        <p>Page Content</p>
    </MatDrawerContent>
</MatDrawerContainer>


@code
{
    bool Opened = true;

    void ButtonClicked()
    {
        Opened = !Opened;
    }

}"

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(17, "\n\n\n");
            __builder.AddMarkupContent(18, "<h5 class=\"mat-h5\">Modal</h5>\n");
            __builder.OpenComponent<MatBlazor.Demo.DemoContainer.DemoContainer>(19);
            __builder.AddAttribute(20, "SourcePath", ".\\..\\..\\MatBlazor.Demo\\Frames\\MatDrawerModalPageFrame.razor");
            __builder.AddAttribute(21, "Content", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddMarkupContent(22, "<iframe src=\"MatDrawerModalFrame\" style=\"width: 100%; height: 50%;\"></iframe>");
            }
            ));
            __builder.AddAttribute(23, "SourceContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.Demo.BlazorFiddle.BlazorFiddle>(24);
                __builder2.AddAttribute(25, "Template", "MatBlazor");
                __builder2.AddAttribute(26, "Code", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 55 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoMatDrawer.razor"
                                                  @"@page ""/MatDrawerModalFrame""

<MatDrawerContainer Style=""width: 100vw; height: 100vh;"">
    <MatDrawer @bind-Opened=""@Opened"" Mode=""@MatDrawerMode.Modal"">
        Drawer Content
    </MatDrawer>
    <MatDrawerContent>
        <div>
            <MatButton OnClick=""@((e) => ButtonClicked())"">Open Menu</MatButton>
        </div>
        <p>Page Content</p>
    </MatDrawerContent>
</MatDrawerContainer>


@code
{
    bool Opened = true;

    void ButtonClicked()
    {
        Opened = !Opened;
    }

}"

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(27, "\n\n\n");
            __builder.AddMarkupContent(28, "<h5 class=\"mat-h5\">Responsive with Custom Width</h5>\n");
            __builder.OpenComponent<MatBlazor.Demo.DemoContainer.DemoContainer>(29);
            __builder.AddAttribute(30, "SourcePath", ".\\..\\..\\MatBlazor.Demo\\Frames\\MatDrawerResponsivePageFrame.razor");
            __builder.AddAttribute(31, "Content", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddMarkupContent(32, "<iframe src=\"MatDrawerResponsiveFrame\" style=\"width: 100%; height: 50%;\"></iframe>");
            }
            ));
            __builder.AddAttribute(33, "SourceContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.Demo.BlazorFiddle.BlazorFiddle>(34);
                __builder2.AddAttribute(35, "Template", "MatBlazor");
                __builder2.AddAttribute(36, "Code", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 90 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoMatDrawer.razor"
                                                  @"@page ""/MatDrawerResponsiveFrame""


<MatDrawerContainer Style=""height: 100vh;"" DrawerWidth=""400px"">
    <MatHidden Breakpoint=""@MatBreakpoint.SM"" Direction=""@MatHiddenDirection.Up"">
        <ChildContent>
            <MatDrawer @bind-Opened=""@Opened"" Mode=""@MatDrawerMode.Modal"">
               Drawer Content
            </MatDrawer>
        </ChildContent>

        <ElseContent>
            <MatDrawer @bind-Opened=""@Opened"" Mode=""@MatDrawerMode.Dismissible"">
                400px Custom Width Drawer Content
            </MatDrawer>
        </ElseContent>
    </MatHidden>

    <MatDrawerContent>
        <div>
            <MatButton OnClick=""@((e) => ButtonClicked())"">
                @if (Opened)
                {
                    <span>Hide Menu</span>
                }
                else
                {
                    <span>Open Menu</span>
                }
            </MatButton>
        </div>
        <p>Page Content</p>
    </MatDrawerContent>
</MatDrawerContainer>


@code
{
    bool Opened = true;

    void ButtonClicked()
    {
        Opened = !Opened;
    }

}"

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseComponent();
            }
            ));
            __builder.CloseComponent();
        }
        #pragma warning restore 1998
    }
}
#pragma warning restore 1591
