// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MatBlazor.Demo.Demo
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.BlazorFiddle;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Demo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.DemoContainer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Doc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Frames;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\_Imports.razor"
using MatBlazor.Demo.Pages;

#line default
#line hidden
#nullable disable
    public partial class DemoTable : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 20 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTable.razor"
         

            public class Car
            {
                public string Name { get; set; }
                public double Price { get; set; }
                public int Horsepower { get; set; }

                public Car(string name, double price, int horsepower)
                {
                    Name = name;
                    Price = price;
                    Horsepower = horsepower;
                }
            }

            Car[] cars = new[]
            {
                new Car("Volkswagen Golf", 10000, 220),
                new Car("Volkswagen Passat", 11000, 240),
                new Car("Volkswagen Polo", 12000, 110),
                new Car("Ford Focus", 13000, 200),
                new Car("Ford Fiesta", 14000, 160),
                new Car("Ford Fusion", 15000, 260),
                new Car("Ford Mondeo", 16000, 120),
            };

        

#line default
#line hidden
#nullable disable
#nullable restore
#line 117 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTable.razor"
         

            public class Todo
            {
                public int UserId { get; set; }
                public int Id { get; set; }
                public string Title { get; set; }
                public bool Completed { get; set; }

                public Todo()
                {
                }
            }

            Todo[] todos;
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 196 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTable.razor"
         
            class Dessert
            {
                public int Calories { get; set; }
                public int Carbs { get; set; }
                public int Fat { get; set; }
                public string Name { get; set; }
                public int Protein { get; set; }
            }

            Dessert[] desserts = new[]
            {
                new Dessert() {Name = "Frozen yogurt", Calories = 159, Fat = 6, Carbs = 24, Protein = 4},
                new Dessert() {Name = "Ice cream sandwich", Calories = 237, Fat = 9, Carbs = 37, Protein = 4},
                new Dessert() {Name = "Eclair", Calories = 262, Fat = 16, Carbs = 24, Protein = 6},
                new Dessert() {Name = "Cupcake", Calories = 305, Fat = 4, Carbs = 67, Protein = 4},
                new Dessert() {Name = "Gingerbread", Calories = 356, Fat = 16, Carbs = 49, Protein = 4},
            };

            void SortData(MatSortChangedEvent sort)
            {
                sortedData = desserts.ToArray();
                if (!(sort == null || sort.Direction == MatSortDirection.None || string.IsNullOrEmpty(sort.SortId)))
                {
                    Comparison<Dessert> comparison = null;
                    switch (sort.SortId)
                    {
                        case "name":
                            comparison = (s1, s2) => string.Compare(s1.Name, s2.Name, StringComparison.InvariantCultureIgnoreCase);
                            break;
                        case "calories":
                            comparison = (s1, s2) => s1.Calories.CompareTo(s2.Calories);
                            break;
                        case "fat":
                            comparison = (s1, s2) => s1.Fat.CompareTo(s2.Fat);
                            break;
                        case "carbs":
                            comparison = (s1, s2) => s1.Carbs.CompareTo(s2.Carbs);
                            break;
                        case "protein":
                            comparison = (s1, s2) => s1.Protein.CompareTo(s2.Protein);
                            break;
                    }
                    if (comparison != null)
                    {
                        if (sort.Direction == MatSortDirection.Desc)
                        {
                            Array.Sort(sortedData, (s1, s2) => -1 * comparison(s1, s2));
                        }
                        else
                        {
                            Array.Sort(sortedData, comparison);
                        }
                    }
                }
            }

            Dessert[] sortedData = null;

            protected override void OnInitialized()
            {
                base.OnInitialized();
                SortData(null);
            }
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 374 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTable.razor"
         
            private string _currentSelectedTask;
            public class Task
            {
                public int Id { get; set; }
                public string Name { get; set; }
                public string Description { get; set; }

                public Task(int id, string name, string description)
                {
                    Id = id;
                    Name = name;
                    Description = description;
                }
            }

            Task[] tasks = new[]
                    {
                new Task(1, "T1", "Do something..."),
                new Task(2, "T2", "Do something..."),
                new Task(3, "T3", "Do something..."),
                new Task(4, "T4", "Do something..."),
                new Task(5, "T5", "Do something..."),
                new Task(6, "T6", "Do something..."),
                new Task(7, "T7", "Do something..."),
            };
            public void SelectionChangedEvent(object row)
            {
                if (row == null)
                {
                    _currentSelectedTask = "";
                }
                else
                {
                    _currentSelectedTask = string.Format("Task Nr. {0} has been selected", ((Task)row).Id);
                }

                this.StateHasChanged();
            }
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 497 "E:\c# project\Blazor\MatBlazor\MatBlazor-master\src\MatBlazor.Demo\Demo\DemoTable.razor"
         
            private string _currentSelectedPerson = "noone";
            public class Person
            {
                public int Id { get; set; }
                public string Firstname { get; set; }
                public string Lastname { get; set; }

                public Person(int id, string firstname, string lastname)
                {
                    Id = id;
                    Firstname = firstname;
                    Lastname = lastname;
                }
            }

            Person[] people = new[]
                    {
                new Person(1, "Gerda", "Mugwort"),
                new Person(2, "Mattalic", "Burrowes"),
                new Person(3, "Hal", "Smallburrow"),
            };

            void OnPersonDbClicked(object item)
            {
                var person = item as Person;
                if (person == null)
                {
                    _currentSelectedPerson = "noone";
                    return;
                }

                _currentSelectedPerson = $"{person.Firstname} {person.Lastname}";
            }
        

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
